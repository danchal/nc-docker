version: '3'

services:
  db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - db:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    env_file:
      - db.env

  redis:
    image: redis:alpine
    restart: always

  app:
    build:
      context: ./app
      args:
        - nextcloud_subdomain=${SUBDOMAIN_NEXTCLOUD}
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - MYSQL_HOST=db
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    env_file:
      - db.env
    depends_on:
      - db
      - redis

  web:
    build: ./web
    restart: always
    volumes:
      - nextcloud:/var/www/html:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VIRTUAL_HOST=${SUBDOMAIN_NEXTCLOUD}
      - LETSENCRYPT_HOST=${SUBDOMAIN_NEXTCLOUD}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - app
    networks:
      - proxy-tier
      - default

  cron:
    build: ./app
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - /etc/localtime:/etc/localtime:ro
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  collabora:
    image: collabora/code
    restart: always
    expose:
      - 9980
    cap_add:
      - MKNOD
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - domain=${DOMAIN_COLLABORA}
      - dictionaries=${DICTIONARIES_COLLABORA}
      - username=${USERNAME_COLLABORA}
      - password=${PASSWORD_COLLABORA}
      - VIRTUAL_HOST=${SUBDOMAIN_COLLABORA}
      - VIRTUAL_PORT=9980
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=${SUBDOMAIN_COLLABORA}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    networks:
      - proxy-tier

  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    networks:
      - proxy-tier

  docker-gen:
    build:
      context: ./docker-gen
    depends_on:
      - nginx-proxy
    restart: always
    command: -notify-sighup nginx-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - templates:/etc/docker-gen/templates:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: "true"
    networks:
      - proxy-tier

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx-proxy
      - docker-gen
    restart: always
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ACME_CA_URI=${ACME_CA_URI:-https://acme-v01.api.letsencrypt.org/directory}
    networks:
      - proxy-tier

  cloudflare-ddns:
    image: joshava/cloudflare-ddns
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ZONE=${CLOUDFLARE_ZONE}
      - HOST=${CLOUDFLARE_HOST}
      - EMAIL=${CLOUDFLARE_EMAIL}
      - API=${CLOUDFLARE_API}
      - TTL=1
      - PROXY=false

  # signal-web-gateway:
  #   image: registry.gitlab.com/morph027/signal-web-gateway:master
  #   restart: always
  #   expose:
  #     - 5000
  #   volumes:
  #     - signal:/signal
  #     - /etc/localtime:/etc/localtime:ro

volumes:
  db:
  nextcloud:
  conf:
  templates:
  vhost:
  html:
  certs:
  signal:

networks:
  proxy-tier:
