version: '3.2'

services:
  db:
    image: mariadb
    container_name: db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - db:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    env_file:
      - db.env

  redis:
    image: redis:alpine
    restart: always

  app:
    build:
      context: ./app
      args:
        - nextcloud_subdomain=${SUBDOMAIN_NEXTCLOUD}
    container_name: app
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - nextcloud-data:/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - NEXTCLOUD_DATA_DIR=/data
      - MYSQL_HOST=db
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
    env_file:
      - db.env
    depends_on:
      - db
      - redis

  nextcloud:
    build: ./web
    container_name: nextcloud
    hostname: nextcloud
    restart: always
    volumes:
      - nextcloud:/var/www/html:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - app
    networks:
      - proxy-tier
      - default

  cron:
    build:
      context: ./cron
    container_name: cron
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - nextcloud-data:/data
      - borg-cache:/cache
      - borg-repo:/repository
      - borg-config:/config/borg
      - rclone-config:/config/rclone
      - lecerts:/config/certs:ro
      - signal:/config/signal
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_HOST=db
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - BORG_PASSPHRASE=${BORG_PASSPHRASE}
      - RCLONE_REMOTES=${RCLONE_REMOTES}
      - SIGNAL_CLIENT_NO=${SIGNAL_CLIENT_NO}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
    env_file:
      - db.env
    depends_on:
      - db
      - redis

  letsencrypt:
    build:
      context: ./letsencrypt
      args:
        dns_cloudflare_email: ${CLOUDFLARE_EMAIL}
        dns_cloudflare_api_key: ${CLOUDFLARE_API}
    restart: always
    ports:
      - 80:80
      - 443:443
    cap_add:
      - NET_ADMIN
    volumes:
      - lecerts:/config
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - EMAIL=${LE_EMAIL}
      - URL=${LE_URL}
      - SUBDOMAINS=${LE_SUBDOMAINS}
      - ONLY_SUBDOMAINS=${LE_ONLY_SUBDOMAINS}
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - STAGING=false
      - TZ=${LE_TZ}
    networks:
      - proxy-tier

  collabora:
    image: collabora/code
    container_name: collabora
    hostname: collabora
    restart: always
    expose:
      - 9980
    cap_add:
      - MKNOD
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - domain=${DOMAIN_COLLABORA}
      - dictionaries=${DICTIONARIES_COLLABORA}
      - VIRTUAL_HOST=${SUBDOMAIN_COLLABORA}
      - VIRTUAL_PORT=9980
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=${SUBDOMAIN_COLLABORA}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - extra_params=--o:net.post_allow.host[0]=::ffff:172.[0-9]+.[0-9]+.[0-9]+
    networks:
      - proxy-tier

  cloudflare-ddns:
    image: joshava/cloudflare-ddns
    container_name: cloudflare-ddns
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ZONE=${CLOUDFLARE_ZONE}
      - HOST=${CLOUDFLARE_HOST}
      - EMAIL=${CLOUDFLARE_EMAIL}
      - API=${CLOUDFLARE_API}
      - TTL=1
      - PROXY=false

  signal-web-gateway:
    image: registry.gitlab.com/morph027/signal-web-gateway:master
    container_name: signal-web-gateway
    restart: always
    expose:
      - 5000
    volumes:
      - signal:/signal
      - /etc/localtime:/etc/localtime:ro

volumes:
  db:
  nextcloud:
  nextcloud-data:
  lecerts:
  signal:
  backup-config:
  borg-cache:
  borg-repo:
  borg-config:
  rclone-config:

networks:
  proxy-tier:
