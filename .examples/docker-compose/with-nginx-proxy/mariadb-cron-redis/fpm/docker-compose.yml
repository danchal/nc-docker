version: '3.2'

services:
  db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - db:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    env_file:
      - db.env

  redis:
    image: redis:alpine
    restart: always

  app:
    build:
      context: ./app
      args:
        - nextcloud_subdomain=${SUBDOMAIN_NEXTCLOUD}
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - nextcloud-data:/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - NEXTCLOUD_DATA_DIR=/data
      - MYSQL_HOST=db
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
    env_file:
      - db.env
    depends_on:
      - db
      - redis

  web:
    build: ./web
    restart: always
    volumes:
      - nextcloud:/var/www/html:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VIRTUAL_HOST=${SUBDOMAIN_NEXTCLOUD}
      - LETSENCRYPT_HOST=${SUBDOMAIN_NEXTCLOUD}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - app
    networks:
      - proxy-tier
      - default

  cron:
    build:
      context: ./cron
      args:
        - borg_passphrase=${BORG_PASSPHRASE}
        - signal_client_number=${SIGNAL_CLIENT_NO}
    hostname: ${COMPOSE_PROJECT_NAME}
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - nextcloud-data:/data
      - backup-config:/config
      - backup-cache:/cache
      - backup-repo:/repository
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_HOST=db
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    env_file:
      - db.env
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  proxy:
    build:
      context: ./proxy
      args:
        - subdomain_nextcloud=${SUBDOMAIN_NEXTCLOUD}
        - subdomain_collabora=${SUBDOMAIN_COLLABORA}
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - proxy-tier

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ACME_CA_URI=${ACME_CA_URI:-https://acme-v01.api.letsencrypt.org/directory}
    networks:
      - proxy-tier
    depends_on:
      - proxy

  collabora:
    image: collabora/code
    restart: always
    expose:
      - 9980
    cap_add:
      - MKNOD
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - domain=${DOMAIN_COLLABORA}
      - dictionaries=${DICTIONARIES_COLLABORA}
      - username=${USERNAME_COLLABORA}
      - password=${PASSWORD_COLLABORA}
      - VIRTUAL_HOST=${SUBDOMAIN_COLLABORA}
      - VIRTUAL_PORT=9980
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=${SUBDOMAIN_COLLABORA}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    networks:
      - proxy-tier

  cloudflare-ddns:
    image: joshava/cloudflare-ddns
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ZONE=${CLOUDFLARE_ZONE}
      - HOST=${CLOUDFLARE_HOST}
      - EMAIL=${CLOUDFLARE_EMAIL}
      - API=${CLOUDFLARE_API}
      - TTL=1
      - PROXY=false

  signal-web-gateway:
    image: registry.gitlab.com/morph027/signal-web-gateway:master
    restart: always
    expose:
      - 5000
    volumes:
      - signal:/signal
      - /etc/localtime:/etc/localtime:ro

  fail2ban:
    build:
      context: ./fail2ban
    restart: always
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - fail2ban-db:/data/db
      - /var/lib/docker/volumes/${COMPOSE_PROJECT_NAME}_nextcloud-data/_data/nextcloud.log:/var/log/nextcloud.log:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - F2B_DEST_EMAIL=${F2B_DEST_EMAIL}
      - F2B_SENDER=${F2B_SENDER}
      - SSMTP_HOST=${SSMTP_HOST}
      - SSMTP_PORT=${SSMTP_PORT}
      - SSMTP_HOSTNAME=${SSMTP_HOSTNAME}
      - SSMTP_USER=${SSMTP_USER}
      - SSMTP_PASSWORD=${SSMTP_PASSWORD}
      - SSMTP_TLS=${SSMTP_TLS}
    env_file:
      - ./fail2ban/fail2ban.env
    depends_on:
      - app

  # backup:
  #   build:
  #     context: ./backup
  #     args:
  #       - borg_passphrase=${BORG_PASSPHRASE}
  #       - signal_client_number=${SIGNAL_CLIENT_NO}
  #   hostname: ${COMPOSE_PROJECT_NAME}
  #   restart: always
  #   volumes:
  #     - backup-config:/config
  #     - backup-cache:/cache
  #     - nextcloud-data:/source/nextcloud:ro
  #     - backup-repo:/repository
  #     - /etc/localtime:/etc/localtime:ro
  #   depends_on:
  #     - app

volumes:
  db:
  nextcloud:
  nextcloud-data:
  fail2ban-db:
  certs:
  vhost.d:
  html:
  signal:
  backup-config:
  backup-cache:
  backup-repo:

networks:
  proxy-tier:
